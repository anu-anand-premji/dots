#!/bin/sh

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ Global exports for BASH & ZSH                                                                                       ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ Path                                                                                                                ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

if [ -d "$HOME/.bin" ]; then PATH="$HOME/.bin:$PATH"; fi
if [ -d "$HOME/.local/bin" ]; then PATH="$HOME/.local/bin:$PATH"; fi
if [ -d "$HOME/Applications" ]; then PATH="$HOME/Applications:$PATH"; fi
if [ -d "/var/lib/flatpak/exports/bin/" ]; then PATH="/var/lib/flatpak/exports/bin/:$PATH"; fi

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ XDG Dirs                                                                                                            ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

# Clean up the $HOME directory
# https://wiki.archlinux.org/title/XDG_Base_Directory
# https://github.com/b3nj5m1n/xdg-ninja

# Create XDG directories if not there
mkdir -p "$HOME/.config";
mkdir -p "$HOME/.cache";
mkdir -p "$HOME/.local/share";
mkdir -p "$HOME/.local/state";

# Define and export XDG variables without word splitting or pathname expansion
: export "${XDG_CONFIG_HOME:="$HOME/.config"}";
: export "${XDG_DATA_HOME:="$HOME/.local/share"}";
: export "${XDG_CACHE_HOME:="$HOME/.cache"}";
: export "${XDG_STATE_HOME:="$HOME/.local/state"}";

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ $HOME clean-up                                                                                                      ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

# Android
ANDROID_SDK_HOME="$XDG_CONFIG_HOME/android" && export ANDROID_SDK_HOME;
mkdir -p "$ANDROID_SDK_HOME";

# Ansible
ANSIBLE_HOME="$XDG_CONFIG_HOME/ansible" && export ANSIBLE_HOME;
ANSIBLE_CONFIG="$XDG_CONFIG_HOME/ansible/ansible.cfg" && export ANSIBLE_CONFIG;
ANSIBLE_GALAXY_CACHE_DIR="$XDG_CACHE_HOME/ansible/galaxy_cache" && export ANSIBLE_GALAXY_CACHE_DIR;
mkdir -p "$ANSIBLE_HOME";
mkdir -p "$ANSIBLE_GALAXY_CACHE_DIR";

# Aspell
ASPELL_CONF="$XDG_CONFIG_HOME/aspell" && export ASPELL_CONF;
mkdir -p "$ASPELL_CONF";

# AWS
AWS_CONFIG_FILE="$XDG_CONFIG_HOME/aws/config" && export AWS_CONFIG_FILE;
AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME/aws/credentials" && export AWS_SHARED_CREDENTIALS_FILE;
mkdir -p "$XDG_CONFIG_HOME/aws";

# Docker
DOCKER_CONFIG="$XDG_CONFIG_HOME/docker" && export DOCKER_CONFIG;
MACHINE_STORAGE_PATH="$XDG_DATA_HOME/docker-machine" && export MACHINE_STORAGE_PATH;
mkdir -p "$DOCKER_CONFIG";
mkdir -p "$MACHINE_STORAGE_PATH";

# Dotnet
DOTNET_CLI_HOME="$XDG_CONFIG_HOME/dotnet" && export DOTNET_CLI_HOME;
mkdir -p "$DOTNET_CLI_HOME";

# Git
GIT_TEMPLATE_DIR="$XDG_CONFIG_HOME/git/template" && export GIT_TEMPLATE_DIR;
mkdir -p "$GIT_TEMPLATE_DIR";

# GnuPG
GNUPGHOME="$XDG_CONFIG_HOME/gnupg" && export GNUPGHOME;
mkdir -p "$GNUPGHOME";

# Go
GOPATH="$XDG_DATA_HOME/go" && export GOPATH;
mkdir -p "$GOPATH";

# GTK
GTK_RC_FILES="$XDG_CONFIG_HOME/gtk-1.0/gtkrc" && export GTK_RC_FILES;
GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc" && export GTK2_RC_FILES;
mkdir -p "$XDG_CONFIG_HOME/gtk-1.0";
mkdir -p "$XDG_CONFIG_HOME/gtk-2.0";

# INPUTRC
INPUTRC="$XDG_CONFIG_HOME/bash/inputrc" && export INPUTRC;
mkdir -p "$XDG_CONFIG_HOME/bash";

# Java
_JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME/java" && export _JAVA_OPTIONS;
_JAVA_OPTIONS=-Djavafx.cachedir="$XDG_CACHE_HOME/openjfx" && export _JAVA_OPTIONS;
mkdir -p "$XDG_CONFIG_HOME/java";
mkdir -p "$XDG_CACHE_HOME/openjfx";

# Kubernetes
alias kubectl='kubectl --cache-dir "$XDG_CACHE_HOME/kube/http"';
KUBECONFIG="$XDG_CONFIG_HOME/kube/config" && export KUBECONFIG;
mkdir -p "$XDG_CACHE_HOME/kube";
mkdir -p "$XDG_CONFIG_HOME/kube";

# LaTeX
TEXMFCONFIG="$XDG_CONFIG_HOME/texlive/texmf-config" && export TEXMFCONFIG;
TEXMFHOME="$XDG_DATA_HOME/texmf" && export TEXMFHOME;
TEXMFVAR="$XDG_CACHE_HOME/texlive/texmf-var" && export TEXMFVAR;
mkdir -p "$XDG_CONFIG_HOME/texlive";
mkdir -p "$XDG_DATA_HOME/texmf";
mkdir -p "$XDG_CACHE_HOME/texlive";

# Less
LESSHISTFILE="$XDG_RUNTIME_DIR/less/history" && export LESSHISTFILE;
LESSKEY="$XDG_CONFIG_HOME/less/keyfile.bin" && export LESSKEY;
mkdir -p "$XDG_CONFIG_HOME/less";

# Nvidia
alias nvidia-settings="nvidia-settings --config=$XDG_CONFIG_HOME/nvidia/settings";

# Python & Jupyter
IPYTHONDIR="$XDG_CONFIG_HOME/jupyter" && export IPYTHONDIR;
JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter" && export JUPYTER_CONFIG_DIR;
PYLINTHOME="$XDG_CACHE_HOME/pylint" && export PYLINTHOME;
PYLINTRC="$XDG_CONFIG_HOME/pylint/pylintrc" && export PYLINTRC;
PYTHONHISTFILE="$XDG_CACHE_HOME/python_history" && export PYTHONHISTFILE;
mkdir -p "$XDG_CONFIG_HOME/jupyter";
mkdir -p "$XDG_CACHE_HOME/pylint";
mkdir -p "$XDG_CONFIG_HOME/pylint";

# Ripgrep
RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME/rg/config" && export RIPGREP_CONFIG_PATH;
mkdir -p "$XDG_CONFIG_HOME/rg";

# Rust
CARGO_HOME="$XDG_DATA_HOME/cargo" && export CARGO_HOME;
RUSTUP_HOME="$XDG_DATA_HOME/rustup" && export RUSTUP_HOME;
mkdir -p "$CARGO_HOME";
mkdir -p "$RUSTUP_HOME";

# Subversion
alias svn="svn --config-dir $XDG_CONFIG_HOME/subversion";

# Terminfo
TERMINFO_DIRS="$XDG_DATA_HOME/terminfo:/usr/share/terminfo" && export TERMINFO_DIRS;
TERMINFO="$XDG_DATA_HOME/terminfo" && export TERMINFO;
mkdir -p "$XDG_DATA_HOME/terminfo";

# Tmux
alias tmux="tmux -f $XDG_CONFIG_HOME/tmux/conf";
TMUX_TMPDIR="$XDG_RUNTIME_DIR/tmux" && export TMUX_TMPDIR;
mkdir -p "$XDG_CONFIG_HOME/tmux";
mkdir -p "$XDG_RUNTIME_DIR/tmux";

# Wget
WGETRC="$XDG_CONFIG_HOME/wget/wgetrc" && export WGETRC;
alias wget="wget --hsts-file=$XDG_DATA_HOME/wget-hsts";
mkdir -p "$XDG_CONFIG_HOME/wget";

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ Terminfo                                                                                                            ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

LESS_TERMCAP_mb="$(printf "\e[1;31m")" 	  && export LESS_TERMCAP_mb;
LESS_TERMCAP_md="$(printf "\e[1;31m")"    && export LESS_TERMCAP_md;
LESS_TERMCAP_me="$(printf "\e[0m")"       && export LESS_TERMCAP_me;
LESS_TERMCAP_se="$(printf "\e[0m")"       && export LESS_TERMCAP_se;
LESS_TERMCAP_so="$(printf "\e[1;44;33m")" && export LESS_TERMCAP_so;
LESS_TERMCAP_ue="$(printf "\e[0m")"       && export LESS_TERMCAP_ue;
LESS_TERMCAP_us="$(printf "\e[1;32m")"    && export LESS_TERMCAP_us;

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ Editor                                                                                                              ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

if command -v nvim >/dev/null 2>&1; then EDITOR=nvim; else EDITOR=vi; fi && export EDITOR;
if command -v code >/dev/null 2>&1; then VISUAL=code; else VISUAL=$EDITOR; fi && export VISUAL;

# ════════════════════════════════════════════════════════════════════════════════════════════════════════════════════ #
