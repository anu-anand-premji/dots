#!/bin/zsh

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ ZSH keybindings with FZF dependency                                                                                 ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

if ! command -v fzf >/dev/null 2>&1; then echo "fzf no found."; return; fi

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ FZF Default Options                                                                                                 ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

export FZF_DEFAULT_COMMAND='find -type f';
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border=rounded --info=inline-right';

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ CTRL-R - Fuzzy search history and then paste the selected entry                                                     ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

# Fuzzy search history and then paste the selected entry
# For truncated entries, use ? key to toggle a preview window
# TODO: Implement Ctr-X to delete an entry from history
fzf_history_widget()
{
    local selected
    if selected=$(fc -rl 1 | awk '{$1="";print substr($0,2)}' |
                  fzf --preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview' \
                      --header-first --header='↵:Paste' -q "$LBUFFER");
    then
        LBUFFER=$selected
    fi
    zle redisplay
}

# CTRL-R - bind to fzf_history_widget()
autoload -U  fzf_history_widget
zle      -N  fzf_history_widget
bindkey '^R' fzf_history_widget

#╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
#║ CTRL-T - Fuzzy search files & directories                                                                           ║
#╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

# Fuzzy search files & directories and then press
#    - ENTER    - paste the selected entry
#    - CTRL + V - open the selected entry in the default $VISUAL editor
#    - CTRL + N - open the selected entry in the default $EDITOR
#    - CTRL + O - open the selected entry in the default system app
#    - CTRL + E - open the selected entry in the default file explorer
#    - CTRL + Y - yank the selected entry to the clipboard
#   For truncated entries, use ? key to toggle a preview window

fzf_file_widget()
{
    entries=("$(fd -I --full-path --hidden --exclude ".git" --color=never . / |                                 \
                fzf --preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview' --exit-0  \
                    --expect=ctrl-o,ctrl-v,ctrl-n,ctrl-y,ctrl-e --header-first                                  \
                    --header='↵:Paste | ^E: File Explorer | ^V: $VISUAL | ^N: $EDITOR | ^O: System App | ^Y: Copy')");

    key="$(head -1 <<< "${entries[@]}")";
    sel="$(head -2 <<< "${entries[@]}" | tail -1)" || return;

    if   [[ "$key" == ctrl-o ]]; then open "$sel";
    elif [[ "$key" == ctrl-v ]]; then "$VISUAL" "$sel";
    elif [[ "$key" == ctrl-n ]]; then "$EDITOR" "$sel";
    elif [[ "$key" == ctrl-e ]]; then if [[ -d "$sel" ]]; then xdg-open "$sel"; else xdg-open $(dirname "$sel"); fi
    elif [[ "$key" == ctrl-y ]]; then printf "$sel" | clipcopy;
    else LBUFFER="${LBUFFER}$sel";
    fi
    local ret=$?;
    zle reset-prompt;
    return $ret;
}

# CTRL-T - bind to fzf_file_widget()
autoload -U  fzf_file_widget
zle      -N  fzf_file_widget
bindkey '^T' fzf_file_widget

# ════════════════════════════════════════════════════════════════════════════════════════════════════════════════════ #
