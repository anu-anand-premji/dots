# ZSH keybindings with FZF dependency

# -------------------------------------------------------------------------------------------------------------------- #

if ! command -v fzf >/dev/null 2>&1; then echo "fzf no found."; return; fi

# -------------------------------------------------------------------------------------------------------------------- #

export FZF_DEFAULT_COMMAND='find -type f';
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border=rounded --info=right';

# -------------------------------------------------------------------------------------------------------------------- #

# Fuzzy search history and then paste the selected entry on to the ZSH shell
# For truncated entries, use ? key to toggle a preview window
function fzf_history_widget() {
	local selected
	if selected=$(fc -rl 1 | awk '{$1="";print substr($0,2)}' |
				  fzf --preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview' -q "$LBUFFER");
	then
		LBUFFER=$selected
	fi
	zle redisplay
}

# CTRL-R - fuzzy search history and then paste the selected entry on to the shell
autoload -U  fzf_history_widget
zle      -N  fzf_history_widget
bindkey '^R' fzf_history_widget

# -------------------------------------------------------------------------------------------------------------------- #

# Fuzzy search files & directories and then paste the selected entry at the cursor on the shell
# For truncated entries, use ? key to toggle a preview window
function fzf_file_widget() {

	entries=("$(fd -I --full-path --hidden --exclude ".git" --color=never . / |                                 \
				fzf --preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview' --exit-0  \
					--expect=ctrl-o,ctrl-v,ctrl-n,ctrl-y,ctrl-e --header-first                                  \
					--header='â†µ:Paste | ^E: File Explorer | ^V: $VISUAL | ^N: $EDITOR | ^O: System App | ^Y: Copy')");

	key="$(head -1 <<< "${entries[@]}")";
	sel="$(head -2 <<< "${entries[@]}" | tail -1)" || return;

	if   [[ "$key" == ctrl-o ]]; then open "$sel";
	elif [[ "$key" == ctrl-v ]]; then "$VISUAL" "$sel";
	elif [[ "$key" == ctrl-n ]]; then "$EDITOR" "$sel";
	elif [[ "$key" == ctrl-e ]]; then if [[ -d "$sel" ]]; then xdg-open "$sel"; else xdg-open $(dirname "$sel"); fi
	elif [[ "$key" == ctrl-y ]]; then printf "$sel" | clipcopy;
	else LBUFFER="${LBUFFER}$sel";
	fi
	local ret=$?;zle reset-prompt; return $ret;
}

# CTRL-T - fuzzy search files & directories and then paste the selected entry on to the shell
autoload -U  fzf_file_widget
zle      -N  fzf_file_widget
bindkey '^T' fzf_file_widget

# -------------------------------------------------------------------------------------------------------------------- #
